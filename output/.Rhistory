library(xlsx)
install.package(xlsx)
install.packagespackage(xlsx)
install.packages(xlsx)
install.packages('xlsx')
library(xlsx)
all<- read.xlsx("all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
all<- read.xlsx("~/Desktop/all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
names(all)
all$SAMPLE
unique(all$SAMPLE)
for(i in tree.ID)
{
}
tree.ID <- unique(all$SAMPLE)
for(i in tree.ID)
{
}
index <- which(all$SAMPLE == i)
first.index <- index[1]
year.indices <- index[2:length(index)]
all.2 <- merge(all,'CD.normalized')
View(all.2)
all.2 <- data.frame (holla = 1, hallo = 2)
View(all.2)
all.2 <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
View(all.2)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
all[j,]
for(j in year.indices)
{
all[j,]
}
all[j,]
all[j,]$CD.norm
all[j,]$CD.norm = all[j,]$CD/all[reference.index,]
all[reference.index,]$CD
reference.index <- index[1]
all[j,]$CD.norm = all[j,]$CD/all[reference.index,]$CD
all<- read.xlsx("~/Desktop/all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
names(all)
tree.ID <- unique(all$SAMPLE)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
for(i in tree.ID)
{
index <- which(all$SAMPLE == i)
reference.index <- index[1]
for(j in year.indices)
{
all[j,]$CD.norm = all[j,]$CD/all[reference.index,]$CD
}
}
View(all)
all[j,]$CD
all[reference.index,]$CD
all[j,]$CD.norm = all[j,]$CD/all[reference.index,]$CD
all[j,]$CD.norm
View(all)
all[j,11] = all[j,]$CD/all[reference.index,]$CD
all<- read.xlsx("~/Desktop/all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
names(all)
tree.ID <- unique(all$SAMPLE)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
for(i in tree.ID)
{
index <- which(all$SAMPLE == i)
reference.index <- index[1]
for(j in year.indices)
{
all[j,11] = all[j,]$CD/all[reference.index,]$CD
}
}
View(all)
all[j,11]
all[j,]$CD/all[reference.index,]$CD
all[,11]
for(i in tree.ID)
{
index <- which(all$SAMPLE == i)
reference.index <- index[1]
for(j in reference.index)
{
all[j,11] = all[j,]$CD/all[reference.index,]$CD
}
}
View(all)
for(i in tree.ID)
{
index <- which(all$SAMPLE == i)
reference.index <- index[1]
for(j in index)
{
all[j,11] = all[j,]$CD/all[reference.index,]$CD
}
}
View(all)
source('~/.active-rstudio-document')
View(all)
all[j,]$CD
View(all)
source('~/.active-rstudio-document')
View(all)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
View(all)
all<- read.xlsx("~/Desktop/all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
names(all)
tree.ID <- unique(all$SAMPLE)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
View(all)
library(xlsx)
all<- read.xlsx("~/Desktop/all.xlsx", sep = "",sheetIndex, sheetName="Sheet1", rowIndex=NULL, endRow=NULL, as.data.frame=TRUE, header=TRUE)[,1:10]
names(all)
tree.ID <- unique(all$SAMPLE)
all <- merge(all,data.frame(CD.norm=0, MCA.norm=0, RCTA.norm=0, Vg.norm=0, Vs.norm=0))
for(i in tree.ID)
{
index <- which(all$SAMPLE == i)
reference.index <- index[1]
for(j in index)
{
all[j,]$CD.norm = all[j,]$CD/all[reference.index,]$CD
all[j,]$MCA.norm = all[j,]$MCA/all[reference.index,]$MCA
all[j,]$RCTA.norm = all[j,]$RCTA/all[reference.index,]$RCTA
all[j,]$Vg.norm = all[j,]$Vg/all[reference.index,]$Vg
all[j,]$Vs.norm = all[j,]$Vs/all[reference.index,]$Vs
}
}
View(all)
source('~/Desktop/buttress.R')
source('~/Desktop/buttress.R')
View(data)
source('~/pub/R/Pine/pinus_allometry.R')
min(x)
max(x)
min(y)
max(y)
y[1]
y[which(y<0)]
y[which(y<0)]=0
min(y)
source('~/.active-rstudio-document')
log(0)
source('~/.active-rstudio-document')
min(y)
y[which(y<0)]=0.0000001
min(y)
y[which(y<0)]=0.001
min(y)
y[which(y<=0)]=0.001
min(y)
source('~/.active-rstudio-document')
x.log <- log(x)
y.log <- log(y)
lm <- lm(y.log~x.log)
a <- coef(lm)[1]
b <- coef(lm)[2]
expA <- exp(a)
data2 <- data.frame(x,y)
par(mar = c(5,6,4,2))
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
axis(side = 1, at=c(0,0.05,0.1,0.15),cex.axis = 2)
axis(side = 2, at=c(0,0.25,0.5,0.75),cex.axis = 2)
box()
nls.vol <- nls(y ~ b1*x**b2,data = data2,start = list(b1 = 1156,b2 = 3.484), control = list(maxiter=500,warnOnly = TRUE))
r2nls <- 1-(deviance(nls.vol)/sum((y-mean(y))^2))
coefficients(nls.vol)[1]
coefficients(nls.vol)[2]
curve( (coefficients(nls.vol)[1] *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4)
curve( (coefficients(nls.vol)[1]*2.5 *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4,lty = 4)
curve( (coefficients(nls.vol)[1]/2.5 *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4,lty = 2)
leg.txt = c( as.expression("y =         "   ~ ax^b)  ,
#  "y =  ax^b",
paste("a =  ",formatC(coefficients(nls.vol)[1],big.mark=",",digits = 3,format = "f")),
paste("b =    ",formatC(coefficients(nls.vol)[2],big.mark=",",digits = 3,format = "f"))
, "fac =      2.5"
,"upper border","lower border")
legend("topleft",  leg.txt
,col= c('red','white','white','white','red','red')
,bty = "n"
,lwd = c(4)
,lty = c(1,1,1,1,4,2)
,cex = 1.4
,pt.cex =1.3
)
nls.vol <- nls(y ~ b1*x**b2,data = data2,start = list(b1 = 1156,b2 = 3.484), control = list(maxiter=500,warnOnly = TRUE))
a
b
exp(a)
nls.vol <- nls(y ~ b1*x**b2,data = data2,start = list(b1 = 38.03,b2 = 2.52), control = list(maxiter=500,warnOnly = TRUE))
source('~/.active-rstudio-document')
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
dev.off()
dev.off()
dev.off()
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
dev.off()
dev.off()
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
axis(side = 1, at=c(0,0.05,0.1,0.15),cex.axis = 2)
axis(side = 2, at=c(0,0.25,0.5,0.75),cex.axis = 2)
axis(side = 1, at=c(0,0.5,1,1.5),cex.axis = 2)
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
axis(side = 1, at=c(0,0.25,0.5,0.75),cex.axis = 2)
axis(side = 1, at=c(0,0.2,0.4,0.6),cex.axis = 2)
axis(side = 2, at=c(0,10,20,30),cex.axis = 2)
plot(x[seq(1,length(x),4)],y[seq(1,length(x),4)], axes = FALSE,main = as.expression("No Allometry - Erythrophleum fordii")
,xlab =as.expression(bquote(Radius (m)  )), ylab = as.expression(bquote(GrowthVolume (m^3)  )) ,cex.lab = 2,cex.main = 2)
axis(side = 1, at=c(0,0.2,0.4,0.6),cex.axis = 2)
axis(side = 2, at=c(0,10,20,30),cex.axis = 2)
box()
nls.vol <- nls(y ~ b1*x**b2,data = data2,start = list(b1 = 38.03,b2 = 2.52), control = list(maxiter=500,warnOnly = TRUE))
r2nls <- 1-(deviance(nls.vol)/sum((y-mean(y))^2))
coefficients(nls.vol)[1]
coefficients(nls.vol)[2]
curve( (coefficients(nls.vol)[1] *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4)
curve( (coefficients(nls.vol)[1]*2.5 *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4,lty = 4)
curve( (coefficients(nls.vol)[1]/2.5 *x** coefficients(nls.vol)[2]),0,max(x),add=TRUE,col='red',lwd=4,lty = 2)
source('~/.active-rstudio-document')
